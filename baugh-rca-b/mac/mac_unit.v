/* Generated by Yosys 0.30+48 (git sha1 14d50a176d5, gcc 8.3.1 -fPIC -Os) */

(* dynports =  1  *)
(* src = "baugh.v:1.1-39.10" *)
module baugh(A, B, P);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire _220_;
  wire _221_;
  wire _222_;
  wire _223_;
  wire _224_;
  wire _225_;
  wire _226_;
  wire _227_;
  wire _228_;
  wire _229_;
  wire _230_;
  wire _231_;
  wire _232_;
  wire _233_;
  wire _234_;
  wire _235_;
  wire _236_;
  wire _237_;
  wire _238_;
  wire _239_;
  wire _240_;
  wire _241_;
  wire _242_;
  wire _243_;
  wire _244_;
  wire _245_;
  wire _246_;
  wire _247_;
  wire _248_;
  wire _249_;
  wire _250_;
  wire _251_;
  wire _252_;
  wire _253_;
  wire _254_;
  wire _255_;
  wire _256_;
  wire _257_;
  wire _258_;
  wire _259_;
  wire _260_;
  wire _261_;
  wire _262_;
  wire _263_;
  wire _264_;
  wire _265_;
  wire _266_;
  wire _267_;
  wire _268_;
  wire _269_;
  wire _270_;
  wire _271_;
  wire _272_;
  wire _273_;
  wire _274_;
  wire _275_;
  wire _276_;
  wire _277_;
  wire _278_;
  wire _279_;
  wire _280_;
  wire _281_;
  wire _282_;
  wire _283_;
  wire _284_;
  wire _285_;
  wire _286_;
  wire _287_;
  wire _288_;
  wire _289_;
  wire _290_;
  wire _291_;
  wire _292_;
  wire _293_;
  wire _294_;
  wire _295_;
  wire _296_;
  wire _297_;
  wire _298_;
  wire _299_;
  wire _300_;
  wire _301_;
  wire _302_;
  wire _303_;
  wire _304_;
  wire _305_;
  wire _306_;
  wire _307_;
  wire _308_;
  wire _309_;
  wire _310_;
  wire _311_;
  wire _312_;
  wire _313_;
  wire _314_;
  wire _315_;
  wire _316_;
  wire _317_;
  wire _318_;
  wire _319_;
  wire _320_;
  wire _321_;
  wire _322_;
  wire _323_;
  wire _324_;
  wire _325_;
  wire _326_;
  wire _327_;
  wire _328_;
  wire _329_;
  wire _330_;
  wire _331_;
  wire _332_;
  wire _333_;
  wire _334_;
  wire _335_;
  wire _336_;
  wire _337_;
  wire _338_;
  wire _339_;
  wire _340_;
  wire _341_;
  wire _342_;
  wire _343_;
  wire _344_;
  wire _345_;
  wire _346_;
  wire _347_;
  wire _348_;
  wire _349_;
  wire _350_;
  wire _351_;
  wire _352_;
  wire _353_;
  wire _354_;
  wire _355_;
  wire _356_;
  wire _357_;
  wire _358_;
  wire _359_;
  wire _360_;
  wire _361_;
  wire _362_;
  wire _363_;
  wire _364_;
  wire _365_;
  wire _366_;
  wire _367_;
  wire _368_;
  wire _369_;
  wire _370_;
  wire _371_;
  wire _372_;
  wire _373_;
  wire _374_;
  wire _375_;
  wire _376_;
  wire _377_;
  wire _378_;
  wire _379_;
  wire _380_;
  wire _381_;
  wire _382_;
  wire _383_;
  wire _384_;
  wire _385_;
  wire _386_;
  wire _387_;
  wire _388_;
  wire _389_;
  wire _390_;
  wire _391_;
  wire _392_;
  wire _393_;
  wire _394_;
  wire _395_;
  wire _396_;
  wire _397_;
  wire _398_;
  wire _399_;
  wire _400_;
  wire _401_;
  wire _402_;
  wire _403_;
  wire _404_;
  wire _405_;
  (* src = "baugh.v:2.31-2.32" *)
  input [7:0] A;
  wire [7:0] A;
  (* src = "baugh.v:3.31-3.32" *)
  input [7:0] B;
  wire [7:0] B;
  (* src = "baugh.v:4.33-4.34" *)
  output [15:0] P;
  wire [15:0] P;
  (* src = "baugh.v:6.22-6.23" *)
  wire [7:0] a;
  (* src = "baugh.v:7.22-7.23" *)
  wire [7:0] b;
  (* src = "baugh.v:26.13-26.14" *)
  wire [31:0] k;
  (* src = "baugh.v:8.24-8.26" *)
  wire [15:0] \pp[0] ;
  (* src = "baugh.v:8.24-8.26" *)
  wire [15:0] \pp[1] ;
  (* src = "baugh.v:8.24-8.26" *)
  wire [15:0] \pp[2] ;
  (* src = "baugh.v:8.24-8.26" *)
  wire [15:0] \pp[3] ;
  (* src = "baugh.v:8.24-8.26" *)
  wire [15:0] \pp[4] ;
  (* src = "baugh.v:8.24-8.26" *)
  wire [15:0] \pp[5] ;
  (* src = "baugh.v:8.24-8.26" *)
  wire [15:0] \pp[6] ;
  (* src = "baugh.v:8.24-8.26" *)
  wire [15:0] \pp[7] ;
  (* src = "baugh.v:36.31-36.39" *)
  wire [15:0] signed_A;
  (* src = "baugh.v:37.31-37.39" *)
  wire [15:0] signed_B;
  assign _235_ = ~(B[0] & A[3]);
  assign _245_ = ~(B[1] & A[2]);
  assign _256_ = _245_ ^ _235_;
  assign _267_ = ~(B[2] & A[1]);
  assign _277_ = _267_ ^ _256_;
  assign _288_ = ~(B[0] & A[2]);
  assign _299_ = B[1] & A[1];
  assign _309_ = _288_ | ~(_299_);
  assign _320_ = B[2] & A[0];
  assign _331_ = _299_ ^ _288_;
  assign _341_ = _320_ & ~(_331_);
  assign _352_ = _309_ & ~(_341_);
  assign _353_ = _352_ ^ _277_;
  assign _354_ = B[3] & A[0];
  assign _355_ = ~_354_;
  assign _356_ = _355_ ^ _353_;
  assign _357_ = _331_ ^ _320_;
  assign _358_ = B[0] & A[1];
  assign _359_ = B[1] & A[0];
  assign _360_ = _359_ & _358_;
  assign _361_ = _360_ & ~(_357_);
  assign P[3] = ~(_361_ ^ _356_);
  assign _362_ = ~(B[0] & A[4]);
  assign _363_ = ~(B[1] & A[3]);
  assign _364_ = _363_ ^ _362_;
  assign _365_ = ~(B[2] & A[2]);
  assign _366_ = _365_ ^ _364_;
  assign _367_ = _245_ | _235_;
  assign _368_ = _256_ & ~(_267_);
  assign _369_ = _367_ & ~(_368_);
  assign _370_ = _369_ ^ _366_;
  assign _371_ = B[3] & A[1];
  assign _372_ = B[4] & A[0];
  assign _373_ = ~(_372_ ^ _371_);
  assign _374_ = _373_ ^ _370_;
  assign _375_ = _352_ | _277_;
  assign _376_ = _353_ & ~(_355_);
  assign _377_ = _375_ & ~(_376_);
  assign _378_ = ~(_377_ ^ _374_);
  assign _379_ = _361_ & ~(_356_);
  assign P[4] = ~(_379_ ^ _378_);
  assign _380_ = ~(B[0] & A[6]);
  assign _381_ = ~(B[1] & A[5]);
  assign _382_ = _381_ ^ _380_;
  assign _383_ = ~(B[2] & A[4]);
  assign _384_ = _383_ ^ _382_;
  assign _385_ = ~(B[0] & A[5]);
  assign _386_ = B[1] & A[4];
  assign _387_ = _385_ | ~(_386_);
  assign _388_ = B[2] & A[3];
  assign _389_ = _386_ ^ _385_;
  assign _390_ = _388_ & ~(_389_);
  assign _391_ = _387_ & ~(_390_);
  assign _392_ = _391_ ^ _384_;
  assign _393_ = B[3] & A[3];
  assign _394_ = B[4] & A[2];
  assign _395_ = _394_ ^ _393_;
  assign _396_ = ~(B[5] & A[1]);
  assign _397_ = _396_ ^ _395_;
  assign _398_ = _397_ ^ _392_;
  assign _399_ = ~(_389_ ^ _388_);
  assign _400_ = _363_ | _362_;
  assign _401_ = _364_ & ~(_365_);
  assign _402_ = _400_ & ~(_401_);
  assign _403_ = _402_ | ~(_399_);
  assign _404_ = B[3] & A[2];
  assign _405_ = B[4] & A[1];
  assign _000_ = _405_ ^ _404_;
  assign _001_ = B[5] & A[0];
  assign _002_ = _001_ ^ _000_;
  assign _003_ = _402_ ^ _399_;
  assign _004_ = _002_ & ~(_003_);
  assign _005_ = _403_ & ~(_004_);
  assign _006_ = _005_ ^ _398_;
  assign _007_ = ~(_405_ & _404_);
  assign _008_ = _001_ & _000_;
  assign _009_ = _007_ & ~(_008_);
  assign _010_ = B[6] & A[0];
  assign _011_ = _010_ ^ _009_;
  assign _012_ = ~(_011_ ^ _006_);
  assign _013_ = ~(_003_ ^ _002_);
  assign _014_ = _369_ | _366_;
  assign _015_ = _370_ & ~(_373_);
  assign _016_ = _014_ & ~(_015_);
  assign _017_ = _016_ | ~(_013_);
  assign _018_ = _372_ & _371_;
  assign _019_ = _016_ ^ _013_;
  assign _020_ = _018_ & ~(_019_);
  assign _021_ = _017_ & ~(_020_);
  assign _022_ = _021_ ^ _012_;
  assign _023_ = _019_ ^ _018_;
  assign _024_ = _377_ | _374_;
  assign _025_ = _024_ | _023_;
  assign _026_ = ~(_025_ ^ _022_);
  assign _027_ = _024_ ^ _023_;
  assign _028_ = _379_ & ~(_378_);
  assign _029_ = _028_ & _027_;
  assign P[6] = ~(_029_ ^ _026_);
  assign _030_ = B[0] & A[7];
  assign _031_ = _030_ ^ B[7];
  assign _032_ = ~(B[1] & A[6]);
  assign _033_ = _032_ ^ _031_;
  assign _034_ = _381_ | _380_;
  assign _035_ = _382_ & ~(_383_);
  assign _036_ = _034_ & ~(_035_);
  assign _037_ = _036_ ^ _033_;
  assign _038_ = ~(B[2] & A[5]);
  assign _039_ = ~(B[3] & A[4]);
  assign _040_ = _039_ ^ _038_;
  assign _041_ = ~(B[4] & A[3]);
  assign _042_ = _041_ ^ _040_;
  assign _043_ = _042_ ^ _037_;
  assign _044_ = _391_ | _384_;
  assign _045_ = _392_ & ~(_397_);
  assign _046_ = _044_ & ~(_045_);
  assign _047_ = _046_ ^ _043_;
  assign _048_ = _394_ & _393_;
  assign _049_ = _395_ & ~(_396_);
  assign _050_ = _049_ | _048_;
  assign _051_ = ~(B[5] & A[2]);
  assign _052_ = B[6] & A[1];
  assign _053_ = ~(_052_ ^ _051_);
  assign _054_ = B[7] & ~(A[0]);
  assign _055_ = ~_054_;
  assign _056_ = _055_ ^ _053_;
  assign _057_ = _056_ ^ _050_;
  assign _058_ = _057_ ^ _047_;
  assign _059_ = _005_ | _398_;
  assign _060_ = _006_ & ~(_011_);
  assign _061_ = _059_ & ~(_060_);
  assign _062_ = _061_ ^ _058_;
  assign _063_ = _010_ & ~(_009_);
  assign _064_ = ~_063_;
  assign _065_ = _064_ ^ _062_;
  assign _066_ = _012_ & ~(_021_);
  assign _067_ = _066_ ^ _065_;
  assign _068_ = _025_ | _022_;
  assign _069_ = _029_ & ~(_026_);
  assign _070_ = _068_ & ~(_069_);
  assign P[7] = _070_ ^ _067_;
  assign _071_ = B[1] & A[7];
  assign _072_ = ~(_071_ ^ _030_);
  assign _073_ = B[2] & A[6];
  assign _074_ = _073_ ^ _072_;
  assign _075_ = ~(_030_ & B[7]);
  assign _076_ = _031_ & ~(_032_);
  assign _077_ = _075_ & ~(_076_);
  assign _078_ = _077_ ^ _074_;
  assign _079_ = ~(B[3] & A[5]);
  assign _080_ = ~(B[4] & A[4]);
  assign _081_ = _080_ ^ _079_;
  assign _082_ = ~(B[5] & A[3]);
  assign _083_ = _082_ ^ _081_;
  assign _084_ = _083_ ^ _078_;
  assign _085_ = _036_ | _033_;
  assign _086_ = _037_ & ~(_042_);
  assign _087_ = _085_ & ~(_086_);
  assign _088_ = _087_ ^ _084_;
  assign _089_ = _039_ | _038_;
  assign _090_ = _040_ & ~(_041_);
  assign _091_ = _089_ & ~(_090_);
  assign _092_ = B[6] & A[2];
  assign _093_ = B[7] & ~(A[1]);
  assign _094_ = ~(_093_ ^ _092_);
  assign _095_ = _094_ ^ _091_;
  assign _096_ = _051_ | ~(_052_);
  assign _097_ = _053_ & ~(_055_);
  assign _098_ = _096_ & ~(_097_);
  assign _099_ = _098_ ^ _095_;
  assign _100_ = _099_ ^ _088_;
  assign _101_ = _046_ | _043_;
  assign _102_ = _047_ & ~(_057_);
  assign _103_ = _101_ & ~(_102_);
  assign _104_ = _103_ ^ _100_;
  assign _105_ = _050_ & ~(_056_);
  assign _106_ = ~_105_;
  assign _107_ = _106_ ^ _104_;
  assign _108_ = _061_ | _058_;
  assign _109_ = _062_ & ~(_064_);
  assign _110_ = _108_ & ~(_109_);
  assign _111_ = ~(_110_ ^ _107_);
  assign _112_ = _066_ & ~(_065_);
  assign _113_ = ~(_068_ | _067_);
  assign _114_ = _113_ | _112_;
  assign _115_ = _067_ | _026_;
  assign _116_ = _029_ & ~(_115_);
  assign _117_ = _116_ | _114_;
  assign P[8] = ~(_117_ ^ _111_);
  assign _118_ = B[2] & A[7];
  assign _119_ = _118_ ^ _072_;
  assign _120_ = ~(_071_ & _030_);
  assign _121_ = _073_ & ~(_072_);
  assign _122_ = _120_ & ~(_121_);
  assign _123_ = _122_ ^ _119_;
  assign _124_ = ~(B[3] & A[6]);
  assign _125_ = B[4] & A[5];
  assign _126_ = ~(_125_ ^ _124_);
  assign _127_ = B[5] & A[4];
  assign _128_ = ~_127_;
  assign _129_ = _128_ ^ _126_;
  assign _130_ = _129_ ^ _123_;
  assign _131_ = _077_ | _074_;
  assign _132_ = _078_ & ~(_083_);
  assign _133_ = _131_ & ~(_132_);
  assign _134_ = _133_ ^ _130_;
  assign _135_ = _080_ | _079_;
  assign _136_ = _081_ & ~(_082_);
  assign _137_ = _135_ & ~(_136_);
  assign _138_ = B[6] & A[3];
  assign _139_ = B[7] & ~(A[2]);
  assign _140_ = ~(_139_ ^ _138_);
  assign _141_ = ~(_140_ ^ _137_);
  assign _142_ = _093_ & _092_;
  assign _143_ = _142_ ^ _141_;
  assign _144_ = _143_ ^ _134_;
  assign _145_ = _087_ | _084_;
  assign _146_ = _088_ & ~(_099_);
  assign _147_ = _145_ & ~(_146_);
  assign _148_ = _147_ ^ _144_;
  assign _149_ = _094_ | _091_;
  assign _150_ = _095_ & ~(_098_);
  assign _151_ = _149_ & ~(_150_);
  assign _152_ = ~(_151_ ^ _148_);
  assign _153_ = _103_ | _100_;
  assign _154_ = _104_ & ~(_106_);
  assign _155_ = _153_ & ~(_154_);
  assign _156_ = _155_ ^ _152_;
  assign _157_ = _110_ | _107_;
  assign _158_ = _117_ & ~(_111_);
  assign _159_ = _157_ & ~(_158_);
  assign P[9] = _159_ ^ _156_;
  assign _160_ = _118_ & ~(_072_);
  assign _161_ = _120_ & ~(_160_);
  assign _162_ = _161_ ^ _119_;
  assign _163_ = B[3] & A[7];
  assign _164_ = B[4] & A[6];
  assign _165_ = ~(_164_ ^ _163_);
  assign _166_ = B[5] & A[5];
  assign _167_ = _166_ ^ _165_;
  assign _168_ = _167_ ^ _162_;
  assign _169_ = _122_ | _119_;
  assign _170_ = _123_ & ~(_129_);
  assign _171_ = _169_ & ~(_170_);
  assign _172_ = _171_ ^ _168_;
  assign _173_ = _124_ | ~(_125_);
  assign _174_ = _126_ & ~(_128_);
  assign _175_ = _173_ & ~(_174_);
  assign _176_ = B[6] & A[4];
  assign _177_ = B[7] & ~(A[3]);
  assign _178_ = ~(_177_ ^ _176_);
  assign _179_ = ~(_178_ ^ _175_);
  assign _180_ = _139_ & _138_;
  assign _181_ = _180_ ^ _179_;
  assign _182_ = _181_ ^ _172_;
  assign _183_ = _133_ | _130_;
  assign _184_ = _134_ & ~(_143_);
  assign _185_ = _183_ & ~(_184_);
  assign _186_ = _185_ ^ _182_;
  assign _187_ = _140_ | _137_;
  assign _188_ = _142_ & ~(_141_);
  assign _189_ = _187_ & ~(_188_);
  assign _190_ = _189_ ^ _186_;
  assign _191_ = _147_ | _144_;
  assign _192_ = _148_ & ~(_151_);
  assign _193_ = _191_ & ~(_192_);
  assign _194_ = ~(_193_ ^ _190_);
  assign _195_ = _152_ & ~(_155_);
  assign _196_ = ~(_157_ | _156_);
  assign _197_ = _196_ | _195_;
  assign _198_ = _156_ | _111_;
  assign _199_ = _198_ | ~(_117_);
  assign _200_ = _199_ & ~(_197_);
  assign P[10] = _200_ ^ _194_;
  assign _201_ = B[4] & A[7];
  assign _202_ = ~(_201_ ^ _163_);
  assign _203_ = B[5] & A[6];
  assign _204_ = _203_ ^ _202_;
  assign _205_ = _204_ ^ _162_;
  assign _206_ = _161_ | _119_;
  assign _207_ = _162_ & ~(_167_);
  assign _208_ = _206_ & ~(_207_);
  assign _209_ = _208_ ^ _205_;
  assign _210_ = ~(_164_ & _163_);
  assign _211_ = _166_ & ~(_165_);
  assign _212_ = _210_ & ~(_211_);
  assign _213_ = B[6] & A[5];
  assign _214_ = B[7] & ~(A[4]);
  assign _215_ = ~(_214_ ^ _213_);
  assign _216_ = ~(_215_ ^ _212_);
  assign _217_ = _177_ & _176_;
  assign _218_ = _217_ ^ _216_;
  assign _219_ = _218_ ^ _209_;
  assign _220_ = _171_ | _168_;
  assign _221_ = _172_ & ~(_181_);
  assign _222_ = _220_ & ~(_221_);
  assign _223_ = _222_ ^ _219_;
  assign _224_ = _178_ | _175_;
  assign _225_ = _180_ & ~(_179_);
  assign _226_ = _224_ & ~(_225_);
  assign _227_ = _226_ ^ _223_;
  assign _228_ = _185_ | _182_;
  assign _229_ = _186_ & ~(_189_);
  assign _230_ = _228_ & ~(_229_);
  assign _231_ = ~(_230_ ^ _227_);
  assign _232_ = _193_ | _190_;
  assign _233_ = ~(_200_ | _194_);
  assign _234_ = _232_ & ~(_233_);
  assign P[11] = _234_ ^ _231_;
  assign _236_ = B[5] & A[7];
  assign _237_ = _236_ ^ _202_;
  assign _238_ = _237_ ^ _162_;
  assign _239_ = ~_238_;
  assign _240_ = _162_ & ~(_204_);
  assign _241_ = _206_ & ~(_240_);
  assign _242_ = _241_ ^ _239_;
  assign _243_ = ~(_201_ & _163_);
  assign _244_ = _203_ & ~(_202_);
  assign _246_ = _243_ & ~(_244_);
  assign _247_ = B[6] & A[6];
  assign _248_ = B[7] & ~(A[5]);
  assign _249_ = ~(_248_ ^ _247_);
  assign _250_ = ~(_249_ ^ _246_);
  assign _251_ = _214_ & _213_;
  assign _252_ = _251_ ^ _250_;
  assign _253_ = ~(_252_ ^ _242_);
  assign _254_ = _208_ | _205_;
  assign _255_ = _209_ & ~(_218_);
  assign _257_ = _254_ & ~(_255_);
  assign _258_ = _257_ ^ _253_;
  assign _259_ = _215_ | _212_;
  assign _260_ = _217_ & ~(_216_);
  assign _261_ = _259_ & ~(_260_);
  assign _262_ = _261_ ^ _258_;
  assign _263_ = _222_ | _219_;
  assign _264_ = _223_ & ~(_226_);
  assign _265_ = _263_ & ~(_264_);
  assign _266_ = ~(_265_ ^ _262_);
  assign _268_ = _230_ | _227_;
  assign _269_ = ~(_232_ | _231_);
  assign _270_ = _268_ & ~(_269_);
  assign _271_ = _231_ | _194_;
  assign _272_ = _197_ & ~(_271_);
  assign _273_ = _270_ & ~(_272_);
  assign _274_ = _271_ | _198_;
  assign _275_ = _117_ & ~(_274_);
  assign _276_ = _273_ & ~(_275_);
  assign P[12] = _276_ ^ _266_;
  assign _278_ = _162_ & ~(_237_);
  assign _279_ = _206_ & ~(_278_);
  assign _280_ = _279_ ^ _239_;
  assign _281_ = _236_ & ~(_202_);
  assign _282_ = _243_ & ~(_281_);
  assign _283_ = B[6] & A[7];
  assign _284_ = B[7] & ~(A[6]);
  assign _285_ = ~(_284_ ^ _283_);
  assign _286_ = ~(_285_ ^ _282_);
  assign _287_ = _248_ & _247_;
  assign _289_ = _287_ ^ _286_;
  assign _290_ = ~(_289_ ^ _280_);
  assign _291_ = _241_ | _238_;
  assign _292_ = ~(_252_ | _242_);
  assign _293_ = _291_ & ~(_292_);
  assign _294_ = ~(_293_ ^ _290_);
  assign _295_ = _249_ | _246_;
  assign _296_ = _251_ & ~(_250_);
  assign _297_ = _295_ & ~(_296_);
  assign _298_ = ~(_297_ ^ _294_);
  assign _300_ = _257_ | _253_;
  assign _301_ = _258_ & ~(_261_);
  assign _302_ = _300_ & ~(_301_);
  assign _303_ = ~(_302_ ^ _298_);
  assign _304_ = _265_ | _262_;
  assign _305_ = ~(_276_ | _266_);
  assign _306_ = _304_ & ~(_305_);
  assign P[13] = _306_ ^ _303_;
  assign _307_ = A[7] | ~(B[7]);
  assign _308_ = _307_ ^ _283_;
  assign _310_ = ~(_308_ ^ _282_);
  assign _311_ = _284_ & _283_;
  assign _312_ = _311_ ^ _310_;
  assign _313_ = ~(_312_ ^ _280_);
  assign _314_ = _279_ | _238_;
  assign _315_ = ~(_289_ | _280_);
  assign _316_ = _314_ & ~(_315_);
  assign _317_ = ~(_316_ ^ _313_);
  assign _318_ = _285_ | _282_;
  assign _319_ = _287_ & ~(_286_);
  assign _321_ = _318_ & ~(_319_);
  assign _322_ = ~(_321_ ^ _317_);
  assign _323_ = _293_ | _290_;
  assign _324_ = ~(_297_ | _294_);
  assign _325_ = _323_ & ~(_324_);
  assign _326_ = ~(_325_ ^ _322_);
  assign _327_ = _302_ | _298_;
  assign _328_ = ~(_304_ | _303_);
  assign _329_ = _327_ & ~(_328_);
  assign _330_ = _303_ | _266_;
  assign _332_ = ~(_330_ | _276_);
  assign _333_ = _329_ & ~(_332_);
  assign P[14] = _333_ ^ _326_;
  assign _334_ = _283_ & ~(_307_);
  assign _335_ = _334_ ^ _310_;
  assign _336_ = _335_ ^ _280_;
  assign _337_ = ~(_312_ | _280_);
  assign _338_ = _314_ & ~(_337_);
  assign _339_ = _338_ ^ _336_;
  assign _340_ = _308_ | _282_;
  assign _342_ = _311_ & ~(_310_);
  assign _343_ = _340_ & ~(_342_);
  assign _344_ = _343_ ^ _339_;
  assign _345_ = _316_ | _313_;
  assign _346_ = ~(_321_ | _317_);
  assign _347_ = _345_ & ~(_346_);
  assign _348_ = _347_ ^ _344_;
  assign _349_ = _325_ | _322_;
  assign _350_ = ~(_333_ | _326_);
  assign _351_ = _349_ & ~(_350_);
  assign P[15] = _351_ ^ _348_;
  assign P[5] = _028_ ^ _027_;
  assign P[0] = B[0] & A[0];
  assign P[1] = _359_ ^ _358_;
  assign P[2] = ~(_360_ ^ _357_);
  assign a = A;
  assign b = B;
  assign k = 32'd8;
  assign \pp[0]  = 16'h00xx;
  assign \pp[1]  = 16'b0000000xxxxxxxx0;
  assign \pp[2]  = 16'b000000xxxxxxxx00;
  assign \pp[3]  = 16'b00000xxxxxxxx000;
  assign \pp[4]  = 16'h0xx0;
  assign \pp[5]  = 16'b000xxxxxxxx00000;
  assign \pp[6]  = 16'b00xxxxxxxx000000;
  assign \pp[7]  = 16'b0xxxxxxxx0000000;
  assign signed_A = { A[7], A[7], A[7], A[7], A[7], A[7], A[7], A[7], A };
  assign signed_B = { B[7], B[7], B[7], B[7], B[7], B[7], B[7], B[7], B };
endmodule

(* top =  1  *)
(* src = "mac.v:32.1-86.10" *)
module mac(clk, rst, start, A, B, result, done);
  (* src = "mac.v:36.24-36.25" *)
  input [7:0] A;
  wire [7:0] A;
  (* src = "mac.v:37.24-37.25" *)
  input [7:0] B;
  wire [7:0] B;
  (* src = "mac.v:46.24-46.32" *)
  wire [15:0] acc_wire;
  (* src = "mac.v:33.11-33.14" *)
  input clk;
  wire clk;
  (* src = "mac.v:39.12-39.16" *)
  output done;
  wire done;
  (* src = "mac.v:47.19-47.28" *)
  wire done_wire;
  (* src = "mac.v:47.10-47.17" *)
  wire en_wire;
  (* src = "mac.v:44.24-44.36" *)
  (* unused_bits = "8 9 10 11 12 13 14 15" *)
  wire [15:0] product_wire;
  (* src = "mac.v:38.26-38.32" *)
  output [15:0] result;
  wire [15:0] result;
  (* src = "mac.v:34.11-34.14" *)
  input rst;
  wire rst;
  (* src = "mac.v:35.11-35.16" *)
  input start;
  wire start;
  (* src = "mac.v:45.24-45.32" *)
  wire [15:0] sum_wire;
  (* module_not_derived = 32'd1 *)
  (* src = "mac.v:68.16-74.6" *)
  mac_reg_16 acc_reg_inst (
    .clk(clk),
    .data_in({ sum_wire[15], sum_wire[15], sum_wire[15], sum_wire[15], sum_wire[15], sum_wire[15], sum_wire[15], sum_wire[15], sum_wire[15], sum_wire[6:0] }),
    .data_out(acc_wire),
    .en(en_wire),
    .rst(rst)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "mac.v:61.9-65.6" *)
  rca add_inst (
    .A(acc_wire[7:0]),
    .B(product_wire[7:0]),
    .SUM({ sum_wire[15], sum_wire[6:0] })
  );
  (* module_not_derived = 32'd1 *)
  (* src = "mac.v:77.14-81.6" *)
  mac_ctrl ctrl_inst (
    .done(done_wire),
    .en(en_wire),
    .start(start)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "mac.v:54.11-58.6" *)
  baugh mult_inst (
    .A(A),
    .B(B),
    .P(product_wire)
  );
  assign done = done_wire;
  assign result = acc_wire;
  assign sum_wire[14:7] = { sum_wire[15], sum_wire[15], sum_wire[15], sum_wire[15], sum_wire[15], sum_wire[15], sum_wire[15], sum_wire[15] };
endmodule

(* src = "mac.v:20.1-27.10" *)
module mac_ctrl(start, en, done);
  (* src = "mac.v:23.12-23.16" *)
  output done;
  wire done;
  (* src = "mac.v:22.12-22.14" *)
  output en;
  wire en;
  (* src = "mac.v:21.11-21.16" *)
  input start;
  wire start;
  assign done = start;
  assign en = start;
endmodule

(* src = "mac.v:4.1-15.10" *)
module mac_reg_16(clk, rst, en, data_in, data_out);
  (* src = "mac.v:5.11-5.14" *)
  input clk;
  wire clk;
  (* src = "mac.v:8.25-8.32" *)
  input [15:0] data_in;
  wire [15:0] data_in;
  (* src = "mac.v:9.30-9.38" *)
  output [15:0] data_out;
  reg [15:0] data_out;
  (* src = "mac.v:7.11-7.13" *)
  input en;
  wire en;
  (* src = "mac.v:6.11-6.14" *)
  input rst;
  wire rst;
  (* src = "mac.v:11.5-14.8" *)
  always @(posedge clk, posedge rst)
    if (rst) data_out[0] <= 1'h0;
    else if (en) data_out[0] <= data_in[0];
  (* src = "mac.v:11.5-14.8" *)
  always @(posedge clk, posedge rst)
    if (rst) data_out[1] <= 1'h0;
    else if (en) data_out[1] <= data_in[1];
  (* src = "mac.v:11.5-14.8" *)
  always @(posedge clk, posedge rst)
    if (rst) data_out[2] <= 1'h0;
    else if (en) data_out[2] <= data_in[2];
  (* src = "mac.v:11.5-14.8" *)
  always @(posedge clk, posedge rst)
    if (rst) data_out[3] <= 1'h0;
    else if (en) data_out[3] <= data_in[3];
  (* src = "mac.v:11.5-14.8" *)
  always @(posedge clk, posedge rst)
    if (rst) data_out[4] <= 1'h0;
    else if (en) data_out[4] <= data_in[4];
  (* src = "mac.v:11.5-14.8" *)
  always @(posedge clk, posedge rst)
    if (rst) data_out[5] <= 1'h0;
    else if (en) data_out[5] <= data_in[5];
  (* src = "mac.v:11.5-14.8" *)
  always @(posedge clk, posedge rst)
    if (rst) data_out[6] <= 1'h0;
    else if (en) data_out[6] <= data_in[6];
  (* src = "mac.v:11.5-14.8" *)
  always @(posedge clk, posedge rst)
    if (rst) data_out[7] <= 1'h0;
    else if (en) data_out[7] <= data_in[7];
  (* src = "mac.v:11.5-14.8" *)
  always @(posedge clk, posedge rst)
    if (rst) data_out[8] <= 1'h0;
    else if (en) data_out[8] <= data_in[8];
  (* src = "mac.v:11.5-14.8" *)
  always @(posedge clk, posedge rst)
    if (rst) data_out[9] <= 1'h0;
    else if (en) data_out[9] <= data_in[9];
  (* src = "mac.v:11.5-14.8" *)
  always @(posedge clk, posedge rst)
    if (rst) data_out[10] <= 1'h0;
    else if (en) data_out[10] <= data_in[10];
  (* src = "mac.v:11.5-14.8" *)
  always @(posedge clk, posedge rst)
    if (rst) data_out[11] <= 1'h0;
    else if (en) data_out[11] <= data_in[11];
  (* src = "mac.v:11.5-14.8" *)
  always @(posedge clk, posedge rst)
    if (rst) data_out[12] <= 1'h0;
    else if (en) data_out[12] <= data_in[12];
  (* src = "mac.v:11.5-14.8" *)
  always @(posedge clk, posedge rst)
    if (rst) data_out[13] <= 1'h0;
    else if (en) data_out[13] <= data_in[13];
  (* src = "mac.v:11.5-14.8" *)
  always @(posedge clk, posedge rst)
    if (rst) data_out[14] <= 1'h0;
    else if (en) data_out[14] <= data_in[14];
  (* src = "mac.v:11.5-14.8" *)
  always @(posedge clk, posedge rst)
    if (rst) data_out[15] <= 1'h0;
    else if (en) data_out[15] <= data_in[15];
endmodule

(* dynports =  1  *)
(* src = "rca.v:1.1-15.10" *)
module rca(A, B, SUM);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  (* src = "rca.v:2.31-2.32" *)
  input [7:0] A;
  wire [7:0] A;
  (* src = "rca.v:3.31-3.32" *)
  input [7:0] B;
  wire [7:0] B;
  (* unused_bits = "1 2 3 4 5 6 7" *)
  wire [7:0] C;
  (* src = "rca.v:4.31-4.34" *)
  output [7:0] SUM;
  wire [7:0] SUM;
  assign SUM[0] = B[0] ^ A[0];
  assign _00_ = ~(B[0] & A[0]);
  assign _01_ = _00_ ^ A[1];
  assign SUM[1] = ~(_01_ ^ B[1]);
  assign _02_ = _00_ | ~(A[1]);
  assign _03_ = B[1] & ~(_01_);
  assign _04_ = _02_ & ~(_03_);
  assign _05_ = _04_ ^ A[2];
  assign SUM[2] = ~(_05_ ^ B[2]);
  assign _06_ = _04_ | ~(A[2]);
  assign _07_ = B[2] & ~(_05_);
  assign _08_ = _06_ & ~(_07_);
  assign _09_ = _08_ ^ A[3];
  assign SUM[3] = ~(_09_ ^ B[3]);
  assign _10_ = _08_ | ~(A[3]);
  assign _11_ = B[3] & ~(_09_);
  assign _12_ = _10_ & ~(_11_);
  assign _13_ = _12_ ^ A[4];
  assign SUM[4] = ~(_13_ ^ B[4]);
  assign _14_ = _12_ | ~(A[4]);
  assign _15_ = B[4] & ~(_13_);
  assign _16_ = _14_ & ~(_15_);
  assign _17_ = _16_ ^ A[5];
  assign SUM[5] = ~(_17_ ^ B[5]);
  assign _18_ = _16_ | ~(A[5]);
  assign _19_ = B[5] & ~(_17_);
  assign _20_ = _18_ & ~(_19_);
  assign _21_ = _20_ ^ A[6];
  assign SUM[6] = ~(_21_ ^ B[6]);
  assign _22_ = _20_ | ~(A[6]);
  assign _23_ = B[6] & ~(_21_);
  assign _24_ = _22_ & ~(_23_);
  assign _25_ = ~(_24_ ^ A[7]);
  assign SUM[7] = _25_ ^ B[7];
  assign C[0] = 1'h0;
endmodule
