/* Generated by Yosys 0.30+48 (git sha1 14d50a176d5, gcc 8.3.1 -fPIC -Os) */

(* src = "kogge.v:1.1-6.10" *)
module and2_16(A, B, Y);
  (* src = "kogge.v:2.19-2.20" *)
  input [15:0] A;
  wire [15:0] A;
  (* src = "kogge.v:2.22-2.23" *)
  input [15:0] B;
  wire [15:0] B;
  (* src = "kogge.v:3.19-3.20" *)
  output [15:0] Y;
  wire [15:0] Y;
  assign Y[0] = B[0] & A[0];
  assign Y[1] = B[1] & A[1];
  assign Y[2] = B[2] & A[2];
  assign Y[3] = B[3] & A[3];
  assign Y[4] = B[4] & A[4];
  assign Y[5] = B[5] & A[5];
  assign Y[6] = B[6] & A[6];
  assign Y[7] = B[7] & A[7];
  assign Y[8] = B[8] & A[8];
  assign Y[9] = B[9] & A[9];
  assign Y[10] = B[10] & A[10];
  assign Y[11] = B[11] & A[11];
  assign Y[12] = B[12] & A[12];
  assign Y[13] = B[13] & A[13];
  assign Y[14] = B[14] & A[14];
  assign Y[15] = B[15] & A[15];
endmodule

(* src = "kogge.v:46.1-54.10" *)
module black_cell_16(Gk, Gk_minus1, Pk, Pk_minus1, G_out, P_out);
  (* src = "kogge.v:48.19-48.24" *)
  output [15:0] G_out;
  wire [15:0] G_out;
  (* src = "kogge.v:47.19-47.21" *)
  input [15:0] Gk;
  wire [15:0] Gk;
  (* src = "kogge.v:47.23-47.32" *)
  input [15:0] Gk_minus1;
  wire [15:0] Gk_minus1;
  (* src = "kogge.v:48.26-48.31" *)
  output [15:0] P_out;
  wire [15:0] P_out;
  (* src = "kogge.v:47.34-47.36" *)
  input [15:0] Pk;
  wire [15:0] Pk;
  (* src = "kogge.v:47.38-47.47" *)
  input [15:0] Pk_minus1;
  wire [15:0] Pk_minus1;
  (* src = "kogge.v:50.17-50.20" *)
  wire [15:0] tmp;
  (* module_not_derived = 32'd1 *)
  (* src = "kogge.v:51.13-51.48" *)
  and2_16 u1 (
    .A(Pk),
    .B(Gk_minus1),
    .Y(tmp)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "kogge.v:52.13-52.44" *)
  or2_16 u2 (
    .A(Gk),
    .B(tmp),
    .Y(G_out)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "kogge.v:53.13-53.50" *)
  and2_16 u3 (
    .A(Pk),
    .B(Pk_minus1),
    .Y(P_out)
  );
endmodule

(* src = "kogge.v:57.1-64.10" *)
module gray_cell_16(Gk, Gk_minus1, Pk_minus1, G_out);
  (* src = "kogge.v:59.19-59.24" *)
  output [15:0] G_out;
  wire [15:0] G_out;
  (* src = "kogge.v:58.19-58.21" *)
  input [15:0] Gk;
  wire [15:0] Gk;
  (* src = "kogge.v:58.23-58.32" *)
  input [15:0] Gk_minus1;
  wire [15:0] Gk_minus1;
  (* src = "kogge.v:58.34-58.43" *)
  input [15:0] Pk_minus1;
  wire [15:0] Pk_minus1;
  (* src = "kogge.v:61.17-61.20" *)
  wire [15:0] tmp;
  (* module_not_derived = 32'd1 *)
  (* src = "kogge.v:62.13-62.55" *)
  and2_16 u1 (
    .A(Pk_minus1),
    .B(Gk_minus1),
    .Y(tmp)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "kogge.v:63.13-63.44" *)
  or2_16 u2 (
    .A(Gk),
    .B(tmp),
    .Y(G_out)
  );
endmodule

(* top =  1  *)
(* src = "kogge.v:67.1-107.10" *)
module kogge(A, B, SUM);
  (* src = "kogge.v:68.19-68.20" *)
  input [15:0] A;
  wire [15:0] A;
  (* src = "kogge.v:68.22-68.23" *)
  input [15:0] B;
  wire [15:0] B;
  (* src = "kogge.v:76.17-76.18" *)
  wire [15:0] C;
  (* src = "kogge.v:71.17-71.19" *)
  wire [15:0] G0;
  (* src = "kogge.v:72.17-72.19" *)
  wire [15:0] G1;
  (* src = "kogge.v:73.17-73.19" *)
  wire [15:0] G2;
  (* src = "kogge.v:74.17-74.19" *)
  wire [15:0] G3;
  (* src = "kogge.v:75.17-75.19" *)
  wire [15:0] G4;
  (* src = "kogge.v:71.21-71.23" *)
  wire [15:0] P0;
  (* src = "kogge.v:72.21-72.23" *)
  wire [15:0] P1;
  (* src = "kogge.v:73.21-73.23" *)
  wire [15:0] P2;
  (* src = "kogge.v:74.21-74.23" *)
  wire [15:0] P3;
  (* src = "kogge.v:75.21-75.23" *)
  (* unused_bits = "0" *)
  wire [15:0] P4;
  (* src = "kogge.v:69.19-69.22" *)
  output [15:0] SUM;
  wire [15:0] SUM;
  (* module_not_derived = 32'd1 *)
  (* src = "kogge.v:82.19-84.48" *)
  black_cell_16 u_b1 (
    .G_out(G1),
    .Gk(G0),
    .Gk_minus1({ 1'h0, G0[15:1] }),
    .P_out(P1),
    .Pk(P0),
    .Pk_minus1({ 1'h1, P0[15:1] })
  );
  (* module_not_derived = 32'd1 *)
  (* src = "kogge.v:87.19-89.48" *)
  black_cell_16 u_b2 (
    .G_out(G2),
    .Gk(G1),
    .Gk_minus1({ 2'h0, G1[15:2] }),
    .P_out(P2),
    .Pk(P1),
    .Pk_minus1({ 2'h1, P1[15:2] })
  );
  (* module_not_derived = 32'd1 *)
  (* src = "kogge.v:92.19-94.48" *)
  black_cell_16 u_b3 (
    .G_out(G3),
    .Gk(G2),
    .Gk_minus1({ 4'h0, G2[15:4] }),
    .P_out(P3),
    .Pk(P2),
    .Pk_minus1({ 4'h1, P2[15:4] })
  );
  (* module_not_derived = 32'd1 *)
  (* src = "kogge.v:97.19-99.48" *)
  black_cell_16 u_b4 (
    .G_out(G4),
    .Gk(G3),
    .Gk_minus1({ 8'h00, G3[15:8] }),
    .P_out(P4),
    .Pk(P3),
    .Pk_minus1({ 8'h01, P3[15:8] })
  );
  (* module_not_derived = 32'd1 *)
  (* src = "kogge.v:102.18-103.65" *)
  gray_cell_16 u_gray (
    .G_out(C),
    .Gk(G4),
    .Gk_minus1({ 1'h0, G4[15:1] }),
    .Pk_minus1({ 1'h1, P4[15:1] })
  );
  (* module_not_derived = 32'd1 *)
  (* src = "kogge.v:79.16-79.51" *)
  pg_cell_16 u_pg (
    .A(A),
    .B(B),
    .G(G0),
    .P(P0)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "kogge.v:106.13-106.43" *)
  xor2_16 u_sum (
    .A(P0),
    .B(C),
    .Y(SUM)
  );
endmodule

(* src = "kogge.v:15.1-20.10" *)
module or2_16(A, B, Y);
  (* src = "kogge.v:16.19-16.20" *)
  input [15:0] A;
  wire [15:0] A;
  (* src = "kogge.v:16.22-16.23" *)
  input [15:0] B;
  wire [15:0] B;
  (* src = "kogge.v:17.19-17.20" *)
  output [15:0] Y;
  wire [15:0] Y;
  assign Y[0] = B[0] | A[0];
  assign Y[1] = B[1] | A[1];
  assign Y[2] = B[2] | A[2];
  assign Y[3] = B[3] | A[3];
  assign Y[4] = B[4] | A[4];
  assign Y[5] = B[5] | A[5];
  assign Y[6] = B[6] | A[6];
  assign Y[7] = B[7] | A[7];
  assign Y[8] = B[8] | A[8];
  assign Y[9] = B[9] | A[9];
  assign Y[10] = B[10] | A[10];
  assign Y[11] = B[11] | A[11];
  assign Y[12] = B[12] | A[12];
  assign Y[13] = B[13] | A[13];
  assign Y[14] = B[14] | A[14];
  assign Y[15] = B[15] | A[15];
endmodule

(* src = "kogge.v:37.1-43.10" *)
module pg_cell_16(A, B, G, P);
  (* src = "kogge.v:38.19-38.20" *)
  input [15:0] A;
  wire [15:0] A;
  (* src = "kogge.v:38.22-38.23" *)
  input [15:0] B;
  wire [15:0] B;
  (* src = "kogge.v:39.19-39.20" *)
  output [15:0] G;
  wire [15:0] G;
  (* src = "kogge.v:39.22-39.23" *)
  output [15:0] P;
  wire [15:0] P;
  (* module_not_derived = 32'd1 *)
  (* src = "kogge.v:41.13-41.40" *)
  and2_16 u_and (
    .A(A),
    .B(B),
    .Y(G)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "kogge.v:42.13-42.40" *)
  xor2_16 u_xor (
    .A(A),
    .B(B),
    .Y(P)
  );
endmodule

(* src = "kogge.v:8.1-13.10" *)
module xor2_16(A, B, Y);
  (* src = "kogge.v:9.19-9.20" *)
  input [15:0] A;
  wire [15:0] A;
  (* src = "kogge.v:9.22-9.23" *)
  input [15:0] B;
  wire [15:0] B;
  (* src = "kogge.v:10.19-10.20" *)
  output [15:0] Y;
  wire [15:0] Y;
  assign Y[15] = B[15] ^ A[15];
  assign Y[0] = B[0] ^ A[0];
  assign Y[1] = B[1] ^ A[1];
  assign Y[2] = B[2] ^ A[2];
  assign Y[3] = B[3] ^ A[3];
  assign Y[4] = B[4] ^ A[4];
  assign Y[5] = B[5] ^ A[5];
  assign Y[6] = B[6] ^ A[6];
  assign Y[7] = B[7] ^ A[7];
  assign Y[8] = B[8] ^ A[8];
  assign Y[9] = B[9] ^ A[9];
  assign Y[10] = B[10] ^ A[10];
  assign Y[11] = B[11] ^ A[11];
  assign Y[12] = B[12] ^ A[12];
  assign Y[13] = B[13] ^ A[13];
  assign Y[14] = B[14] ^ A[14];
endmodule
